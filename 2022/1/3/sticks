#include<iostream>
#include<algorithm>
using namespace std;

int m;
int stick[22];
int tag[22];
int array_sum;

//count是目前完成了几个边，pos目前遍历到了第几个stick，res此棍子剩余所需长度 

bool dfs(int count, int pos, int res)    
{
    if(count == 3)        //如果已经拼好3根棍子，那么一定能拼好 
        return true;
    for(int i = pos;i <= m;i++)
    {
        if(tag[i] == 1)        //如果该stick没有被用过，那么我们才用 
            continue;    //continue:如果stick被用过，那么直接跳到下一层循环 
        tag[i] = 1;        //否则就是stick没用过的情况 
        if(stick[i] == res)
        {
            if(dfs(count + 1, 1, array_sum / 4))
                return true;
        }
        else if(stick[i] < res)
        { 
            if(dfs(count, i + 1, res - stick[i]))
                return true;
        }
        tag[i] = 0;
    }
    return false;
}

void Clear()
{
    for(int i = 1;i <= m;i++)
        tag[i] = 0;
}

int main()
{
    int T;
    cin >> T;
    for(int i = 1;i <= T;i++)
    {
        cin >> m;
        for(int i = 1;i <= m;i++)
        {
            cin >> stick[i];
            array_sum += stick[i];
        }
        if(array_sum % 4 != 0)
            cout << "no" << endl;
        else
        {
            if(dfs(0, 1, array_sum / 4))
                cout << "yes" << endl;
            else
                cout << "no" << endl;
        }
        array_sum = 0;
        Clear();   
    }
    return 0;
}
